---
- name: Create application directory
  file:
    path: "{{ app_dir }}"
    state: directory
    mode: '0755'

- name: Copy application files
  synchronize:
    src: "{{ role_path }}/files/"
    dest: "{{ app_dir }}"
    delete: yes
    recursive: yes
    rsync_opts:
      - "--chmod=755"

- name: Copy docker-compose file
  template:
    src: docker-compose.yml.j2
    dest: "{{ app_dir }}/docker-compose.yml"
    mode: '0644'

- name: Copy environment file
  template:
    src: .env.j2
    dest: "{{ app_dir }}/.env"
    mode: '0600'

- name: Create Nginx configuration
  template:
    src: nginx.conf.j2
    dest: "{{ app_dir }}/nginx.conf"
    mode: '0644'
  notify: restart nginx


- name: Set permissions for app directory
  file:
    path: "{{ app_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Build Docker images
  community.docker.docker_compose_v2:
    project_src: "{{ app_dir }}"
    state: present
    pull: always
    build: always
  register: compose_build_output

- name: Apply Prisma migrations
  command: docker compose run app npx prisma migrate dev --name init
  args:
    chdir: "{{ app_dir }}"
  environment:
    NODE_ENV: development
  register: prisma_migrate_output

- name: Install systemd service
  template:
    src: todo-app.service.j2
    dest: /etc/systemd/system/todo-app.service
    mode: '0644'
  notify: reload systemd

- name: Enable and start todo-app service
  systemd:
    name: todo-app
    enabled: yes
    state: started
    
- name: Deploy application with Docker Compose v2
  community.docker.docker_compose_v2:
    project_src: "{{ app_dir }}"
    state: present
    pull: never
    build: never
    remove_orphans: true
  register: compose_up_output